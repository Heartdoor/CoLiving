var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1000","name":"Avoid types too big","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2071458910"},{"id":"ND1001","name":"Avoid types with too many methods","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1588423785"},{"id":"ND1002","name":"Avoid types with too many fields","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query3987449205"},{"id":"ND1003","name":"Avoid methods too big, too complex","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2368539037"},{"id":"ND1004","name":"Avoid methods with too many parameters","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query1685837031"},{"id":"ND1006","name":"Avoid methods potentially poorly commented","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query4051380568"},{"id":"ND1203","name":"Class with no descendant should be sealed if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2132437556"},{"id":"ND1207","name":"Non-static classes should be instantiated or turned to static","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query818888869"},{"id":"ND1208","name":"Methods should be declared static if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query46159255"},{"id":"ND1211","name":"Don\'t assign static fields from instance methods","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query4233398515"},{"id":"ND1306","name":"Nested types should not be visible","cat":"Design","url":"../../NDependReport.html?e=1#Query442335452"},{"id":"ND1307","name":"Declare types in namespaces","cat":"Design","url":"../../NDependReport.html?e=1#Query1748245689"},{"id":"ND1311","name":"Don\'t use obsolete types, methods or fields","cat":"Design","url":"../../NDependReport.html?e=1#Query1809180291"},{"id":"ND1400","name":"Avoid namespaces mutually dependent","cat":"Architecture","url":"../../NDependReport.html?e=1#Query1653453125"},{"id":"ND1401","name":"Avoid namespaces dependency cycles","cat":"Architecture","url":"../../NDependReport.html?e=1#Query628377565"},{"id":"ND1700","name":"Potentially Dead Types","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query3912344400"},{"id":"ND1701","name":"Potentially Dead Methods","cat":"Dead Code","url":"../../NDependReport.html?e=1#Query1236384003"},{"id":"ND3101","name":"Don\'t use System.Random for security purposes","cat":"Security","url":"../../NDependReport.html?e=1#Query3492615079"},{"id":"ND1800","name":"Methods that could have a lower visibility","cat":"Visibility","url":"../../NDependReport.html?e=1#Query3956120347"},{"id":"ND1805","name":"Fields should be declared as private or protected","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2734159706"},{"id":"ND1807","name":"Avoid public methods not publicly visible","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2977263888"},{"id":"ND1900","name":"Fields should be marked as ReadOnly when possible","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2144868306"},{"id":"ND1901","name":"Avoid non-readonly static fields","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1757686740"},{"id":"ND1902","name":"Avoid static fields with a mutable field type","cat":"Immutability","url":"../../NDependReport.html?e=1#Query4019283338"},{"id":"ND1905","name":"A field must not be assigned from outside its parent hierarchy types","cat":"Immutability","url":"../../NDependReport.html?e=1#Query567343204"},{"id":"ND1906","name":"Don\'t assign a field from many methods","cat":"Immutability","url":"../../NDependReport.html?e=1#Query1975613094"},{"id":"ND2000","name":"Instance fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1161431673"},{"id":"ND2001","name":"Static fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1160401199"},{"id":"ND2006","name":"Types name should begin with an Upper character","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1800655636"},{"id":"ND2007","name":"Methods name should begin with an Upper character","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query445447623"},{"id":"ND2012","name":"Avoid having different types with same name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1043522630"},{"id":"ND2022","name":"Nested class members should not mask outer class\' static members","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2976418339"},{"id":"ND2104","name":"Types with source files stored in the same directory, should be declared in the same namespace","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3089515900"},{"id":"ND2105","name":"Types declared in the same namespace, should have their source files stored in the same directory","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query954528203"},{"id":"ND2206","name":"Enum Storage should be Int32","cat":"System","url":"../../NDependReport.html?e=1#Query2318073070"},{"id":"ND2700","name":"Float and Date Parsing must be culture aware","cat":"System.Globalization","url":"../../NDependReport.html?e=1#Query3992523250"}]}'